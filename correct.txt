<<<<<<< HEAD
class List {
isNil() : bool { true }
length() : int32 { 0 }
}
(* Nil is nothing more than a glorified alias to List *)
class Nil extends List { }
class Cons extends List {
head : int32;
tail : List;
init(hd : int32, tl : List) : Cons {
head <- hd;
tail <- tl;
self;
{
  tail <- tl
}
}
head() : int32 { head }
isNil() : bool { false }
length() : int32 { 1 + tail.length() }
}
class Main {
main() : int32 {
let xs : List <- (new Cons).init(0, (new Cons).init(
1, (new Cons).init(
2, new Nil))) in {
print("List has length ");
printInt32(xs.length());
print("\n");
0
}
}
=======
class T {
    heade() : int32 { heade }
    headqq() : int32 { headqq }
    f() : int32 {
        let x : int32 in {
            x <- 42;
            x * x;
	        if y < 40 then {
                n <- 2;
                x * x
            } else {
                n <- 3
            } else {
                n <- 3
                x * x
            }
        }
    }
    head() : int32 { head int32}
>>>>>>> 5ca869be345f3bf2d72605bf143cc2158d740a08
}